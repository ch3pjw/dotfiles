#!/bin/bash
source .bash_colors

function git_prompt {
    local output
    if git branch &> /dev/null; then
        # git is working and we're on a git branch
        if echo `git status` | grep "nothing to commit" > /dev/null 2>&1; then
            # Clean repository - nothing to commit
            output="${Green}$(__git_ps1 "(%s)")${Color_Off} "
        elif echo `git status` | grep "nothing added to commit but untracked files present" > /dev/null 2>&1; then
            # No changes but files to add
            output="${Cyan}$(__git_ps1 "[%s]")${Color_Off} "
        else
            # Changes to working tree
            output="${Red}$(__git_ps1 "{%s}")${Color_Off} "
        fi
    else
        # prompt component when not in git
        output=''
    fi
    echo -n ${output}
}

function prompt_command {
    local exit_status=$? # Must be the first thing we do
    if [[ $exit_status == 0 ]]; then
        local exit_status_text=${BGreen}✓${Color_Off}
    else
        local exit_status_text=${BRed}✗${Color_Off}
    fi

    local hostname=$HOSTNAME
    local username=$(whoami)
    local host_text=${BGreen}${username}@${hostname}${Color_Off}

    local pwd_text=$(pwd | sed "s|$HOME|~|")

    local total_jobs=$(jobs | wc -l)
    local stopped_jobs=$(jobs -s | wc -l)
    local jobs_text
    if [[ ${total_jobs} != 0 ]]; then
        if [[ ${stopped_jobs} == 0 ]]; then
            jobs_text="${LightGray}[${total_jobs}]${Color_Off}"
        else
            jobs_text="${LightGray}[${Red}${stopped_jobs}${LightGray}/${total_jobs}]${Color_Off}"
        fi
    fi

    local prompt_char=${BBlue}♮${Color_Off}

    PS1="${exit_status_text}${host_text} ${BBlue}${pwd_text} $(git_prompt)${jobs_text}${prompt_char} "
}
