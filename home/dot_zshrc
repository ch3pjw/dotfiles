# Set up the prompt

# autoload -Uz promptinit
# promptinit
# prompt adam1
source ~/.zsh_prompt

if [[ "$TERM" == "xterm" ]]; then
    # Probably actually gnome-terminal, and we want the same colours we get in
    # tmux:
    export TERM=screen-256color
fi

alias ls='ls --color=auto'
alias grep='grep --color=auto'

# Program environment variables
export WORKON_HOME=$HOME/.virtualenvs
_vew=/usr/local/bin/virtualenvwrapper.sh
if [[ -e $_vew ]]; then
    source $_vew
fi

PATH=~/.cabal/bin:$PATH

# Convenience aliases and functions
alias install='sudo aptitude install'
alias update='sudo aptitude upgrade -y'

alias pgrep='pgrep -l'
alias ggrep='git grep -n'
alias nau='nautilus --no-desktop'
alias la='ls -a'
alias ll='ls -l'
alias cp='cp -i'
alias mv='mv -i'
alias rm='rm -i'

function f() {
    glob="*$1*"
    shift
    find . -name $glob $@ | grep -v \.pyc
}

function fr() {
    ggrep -l "$1" | xargs sed -i -e "s/$1/$2/g"
}

function ..() {
    # Quickly move up directories
    local arg=${1:-1}
    local dir=""
    while [ $arg -gt 0 ]; do
        dir="../$dir"
        arg=$(($arg - 1))
    done
    cd $dir >&/dev/null
}
setopt auto_cd

# Fat finger aliases
alias lks='ls'
alias lsd='ls'
alias las='ls'
alias ks='ls'
alias l='ls'
alias s='ls'
alias sl='ls'
alias vm='mv'
alias kess='less'
alias cim='vim'
alias bim='vim'
alias emasc='emacs'
alias emcas='emacs'
alias enacs='emacs'
alias encas='emacs'
alias eamcs='emacs'
alias wrokon='workon'
alias wrokno='workon'
alias workno='workon'
alias worokn='workon'
alias workn='workon'
alias wokon='workon'
alias tmxu='tmux'


# Editor
run_emacs='emacsclient -t'
alias emacs=$run_emacs
export EDITOR=$run_emacs
export ALTERNATE_EDITOR=""  # Start emacsclient start the daemon automatically

# Use emacs keybindings even if our EDITOR is set to vi
bindkey -e

# Conveniently search history with arrow keys (like ipython)
autoload -U up-line-or-beginning-search
autoload -U down-line-or-beginning-search
zle -N up-line-or-beginning-search
zle -N down-line-or-beginning-search
[[ -n "${key[Up]}" ]] && bindkey "${key[Up]}" up-line-or-beginning-search
[[ -n "${key[Down]}" ]] && bindkey "${key[Down]}" down-line-or-beginning-search

setopt histignorealldups sharehistory

HISTSIZE=100000
SAVEHIST=100000
HISTFILE=~/.zsh_history

# Strip out / from WORDCHARS so that ^w will only delete up to the last portion
# of a path:
WORDCHARS="${WORDCHARS:s#/##}"

# Use modern completion system
autoload -Uz compinit
compinit

zstyle ':completion:*' auto-description 'specify: %d'
zstyle ':completion:*' completer _expand _complete _correct _approximate
zstyle ':completion:*' format 'Completing %d'
zstyle ':completion:*' group-name ''
zstyle ':completion:*' menu select=2
eval "$(dircolors -b)"
zstyle ':completion:*:default' list-colors ${(s.:.)LS_COLORS}
zstyle ':completion:*' list-colors ''
zstyle ':completion:*' list-prompt %SAt %p: Hit TAB for more, or the character to insert%s
zstyle ':completion:*' matcher-list '' 'm:{a-z}={A-Z}' 'm:{a-zA-Z}={A-Za-z}' 'r:|[._-]=* r:|=* l:|=*'
zstyle ':completion:*' menu select=long
zstyle ':completion:*' select-prompt %SScrolling active: current selection at %p%s
zstyle ':completion:*' use-compctl false
zstyle ':completion:*' verbose true

zstyle ':completion:*:*:kill:*:processes' list-colors '=(#b) #([0-9]#)*=0=01;31'
zstyle ':completion:*:kill:*' command 'ps -u $USER -o pid,%cpu,tty,cputime,cmd'
